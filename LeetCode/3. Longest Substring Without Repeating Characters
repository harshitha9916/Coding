/*---------------------Hash set-----------------------------*/
class Solution {
    public int lengthOfLongestSubstring(String s) {
        
       Set<Character> set = new HashSet<>();
        int max=0;
        int j=0,i=0;
        while(j<s.length()){
            if(!set.contains(s.charAt(j))){
                set.add(s.charAt(j));
                j++;
                max = Math.max(max,set.size());
            }
            else{
                set.remove(s.charAt(i));
                i++;
            } 
        }
        return max;
    }
}
/*---------------------Hash Map-----------------------------*/
class Solution {
    public int lengthOfLongestSubstring(String s) {
        int n=s.length();
        int max=0;
        HashMap<Character,Integer> h = new HashMap<>();
        for(int i=0,j=0;i<n;i++){
            if(h.containsKey(s.charAt(i))){
                j = Math.max(j,h.get(s.charAt(i))+1);
                
            }
            h.put(s.charAt(i),i);
            max = Math.max(max,i-j+1);
        }
        return max;
    }
}
